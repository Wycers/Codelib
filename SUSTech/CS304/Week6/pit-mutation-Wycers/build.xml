<?xml version="1.0"?>
<project name="PITExample" default="jar" basedir=".">
  <property name="project" value="pit-example"/>
  <property name="version" value="0.1"/>
  <property name="jarfile" value="${project}-${version}.jar"/>
  <property name="src-main" location="src/main/java"/>
  <property name="src-test" location="src/test/java"/>
  <property name="lib" location="lib"/>
  <property name="target" location="target"/>
  <property name="classes" location="${target}/classes"/>
  <property name="test-classes" location="${target}/test-classes"/>
  <property name="reports" location="reports"/>
  <property name="pit-reports" location="${target}/pit-reports"/>
  <target name="compile" depends="init" description="compile the source code">
    <javac debug="true" includeantruntime="false" srcdir="${src-main}" destdir="${classes}">
      <classpath>
        <fileset dir="lib">
          <include name="**/*.jar"/>
        </fileset>
      </classpath>
    </javac>
  </target>
  <target name="compile-tests" depends="init,compile" description="compile the test source code">
    <javac debug="true" includeantruntime="false" srcdir="${src-test}" destdir="${test-classes}">
      <classpath>
        <fileset dir="lib">
          <include name="**/*.jar"/>
        </fileset>
        <pathelement path="${classes}"/>
      </classpath>
    </javac>
  </target>
  <target name="jar" depends="compile" description="generate the distributable files">
    <jar jarfile="${target}/${jarfile}" basedir="${classes}"/>
  </target>
  <target name="clean" description="clean up">
    <delete dir="${target}"/>
    <delete dir="${reports}"/>
  </target>
  <target name="run-tests" depends="compile,compile-tests" description="run your test suite">
    <junit printsummary="yes" haltonfailure="yes" showoutput="yes">
      <classpath>
        <pathelement path="${classes}"/>
        <pathelement path="${test-classes}"/>
        <fileset dir="lib">
          <include name="**/*.jar"/>
        </fileset>
      </classpath>
      <batchtest fork="yes" todir="${reports}/raw/">
        <formatter type="xml"/>
        <fileset dir="${src-test}">
          <include name="**/*Test*.java"/>
        </fileset>
      </batchtest>
    </junit>
  </target>
  <target name="test" depends="run-tests">
    <junitreport todir="${reports}">
      <fileset dir="${reports}/raw/">
        <include name="TEST-*.xml"/>
      </fileset>
      <report format="frames" todir="${reports}\html\"/>
    </junitreport>
  </target>
  <target name="pit" depends="compile,compile-tests">
    <java classname="org.pitest.mutationtest.MutationCoverageReport" fork="true">
      <arg value="--reportDir"/>
      <arg value="${pit-reports}"/>
      <arg value="--targetClasses"/>
      <arg value="pitexample.*"/>
      <arg value="--sourceDirs"/>
      <arg value="${src-main},${src-test}"/>
      <classpath>
        <pathelement path="${classes}"/>
        <pathelement path="${test-classes}"/>
        <fileset dir="lib">
          <include name="**/*.jar"/>
        </fileset>
      </classpath>
    </java>
  </target>
  <target name="init" description="initialize the build environment">
    <tstamp/>
    <mkdir dir="${target}"/>
    <mkdir dir="${classes}"/>
    <mkdir dir="${test-classes}"/>
    <mkdir dir="${reports}"/>
    <mkdir dir="${reports}/raw/"/>
    <mkdir dir="${reports}/html/"/>
  </target>
  <target name="all" depends="clean, test">
  </target>
</project>
