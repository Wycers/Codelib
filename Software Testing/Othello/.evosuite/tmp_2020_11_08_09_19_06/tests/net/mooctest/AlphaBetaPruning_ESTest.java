/*
 * This file was automatically generated by EvoSuite
 * Sun Nov 08 01:22:45 GMT 2020
 */

package net.mooctest;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import net.mooctest.AlphaBetaPruning;
import net.mooctest.MyTreeNode;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class AlphaBetaPruning_ESTest extends AlphaBetaPruning_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      AlphaBetaPruning alphaBetaPruning0 = new AlphaBetaPruning();
      String[][] stringArray0 = new String[2][8];
      String[] stringArray1 = new String[9];
      stringArray1[0] = "net.mooctest.MyTreeNode";
      stringArray1[1] = "JeK~g";
      stringArray1[2] = "net.mooctest.MyTreeNode";
      stringArray1[3] = " E7>,GTP][d|jFla";
      stringArray1[4] = "";
      stringArray1[5] = "Next move of White : ";
      stringArray1[6] = "net.mooctest.MyTreeNode";
      stringArray1[7] = "ZT8TN`";
      stringArray1[8] = "Next move of White : ";
      stringArray0[0] = stringArray1;
      String[] stringArray2 = new String[3];
      stringArray2[0] = "V-Xw@z9!kSc";
      stringArray2[1] = "JeK~g";
      stringArray2[2] = "Next move of White : ";
      stringArray0[1] = stringArray2;
      // Undeclared exception!
      try { 
        alphaBetaPruning0.resetBoard(stringArray0, stringArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 3
         //
         verifyException("net.mooctest.AlphaBetaPruning", e);
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      AlphaBetaPruning alphaBetaPruning0 = new AlphaBetaPruning();
      String[][] stringArray0 = new String[3][6];
      String[] stringArray1 = new String[8];
      stringArray1[0] = "%k$eY=n_";
      stringArray1[1] = "O";
      stringArray1[2] = "0Ua=o=3($pz";
      stringArray1[3] = "net.mooctest.AlphaBetaPruning";
      stringArray1[4] = "";
      stringArray1[5] = "";
      stringArray1[6] = "g*3]n]d7[k";
      stringArray1[7] = "";
      stringArray0[0] = stringArray1;
      String[] stringArray2 = new String[6];
      stringArray2[0] = "";
      stringArray2[1] = "g*3]n]d7[k";
      stringArray2[2] = "";
      stringArray2[3] = "0Ua=o=3($pz";
      stringArray2[4] = "g*3]n]d7[k";
      stringArray2[5] = "0Ua=o=3($pz";
      stringArray0[1] = stringArray2;
      String[] stringArray3 = new String[8];
      stringArray3[0] = "";
      stringArray3[1] = "net.mooctest.AlphaBetaPruning";
      stringArray3[2] = "";
      stringArray3[3] = "";
      stringArray3[4] = "%k$eY=n_";
      stringArray3[5] = "%k$eY=n_";
      stringArray3[6] = "net.mooctest.AlphaBetaPruning";
      stringArray3[7] = "net.mooctest.AlphaBetaPruning";
      stringArray0[2] = stringArray3;
      // Undeclared exception!
      try { 
        alphaBetaPruning0.calculateWhiteScore(stringArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      AlphaBetaPruning alphaBetaPruning0 = new AlphaBetaPruning();
      String[][] stringArray0 = new String[9][6];
      String[] stringArray1 = new String[7];
      stringArray1[0] = "";
      stringArray1[1] = "";
      stringArray1[2] = ",";
      stringArray1[3] = "]wW47G<";
      stringArray1[4] = "eq4$]uF]pIQ=mK";
      stringArray1[5] = "";
      stringArray1[6] = "";
      stringArray0[0] = stringArray1;
      String[] stringArray2 = new String[8];
      stringArray2[0] = ",";
      stringArray2[1] = "C";
      stringArray2[2] = "";
      stringArray2[3] = "";
      stringArray2[4] = "";
      stringArray2[5] = "";
      stringArray2[6] = "";
      stringArray2[7] = "";
      stringArray0[1] = stringArray2;
      String[] stringArray3 = new String[4];
      stringArray3[0] = "";
      stringArray3[1] = "";
      stringArray3[2] = "]wW47G<";
      stringArray3[3] = ",";
      stringArray0[2] = stringArray3;
      String[] stringArray4 = new String[5];
      stringArray4[0] = "";
      stringArray4[1] = "eq4$]uF]pIQ=mK";
      stringArray4[2] = "";
      stringArray4[3] = "";
      stringArray4[4] = ",";
      stringArray0[3] = stringArray4;
      String[] stringArray5 = new String[2];
      stringArray5[0] = "C";
      stringArray5[1] = "";
      stringArray0[4] = stringArray5;
      String[] stringArray6 = new String[4];
      stringArray6[0] = ",";
      stringArray6[1] = "";
      stringArray6[2] = "C";
      stringArray6[3] = "bZ6IHb`~}U=oGzTm";
      stringArray0[5] = stringArray6;
      String[] stringArray7 = new String[7];
      stringArray7[0] = "]wW47G<";
      stringArray7[1] = "";
      stringArray7[2] = "";
      stringArray7[3] = "";
      stringArray7[4] = "bZ6IHb`~}U=oGzTm";
      stringArray7[5] = "";
      stringArray7[6] = ",";
      stringArray0[6] = stringArray7;
      String[] stringArray8 = new String[8];
      stringArray8[0] = "";
      stringArray8[1] = "bZ6IHb`~}U=oGzTm";
      stringArray8[2] = "";
      stringArray8[3] = "";
      stringArray8[4] = ",";
      stringArray8[5] = ",";
      stringArray8[6] = "C";
      stringArray8[7] = "Cxf3)@1!";
      stringArray0[7] = stringArray8;
      String[] stringArray9 = new String[5];
      stringArray9[0] = "";
      stringArray9[1] = "eq4$]uF]pIQ=mK";
      stringArray9[2] = "]wW47G<";
      stringArray9[3] = "eq4$]uF]pIQ=mK";
      stringArray9[4] = "";
      stringArray0[8] = stringArray9;
      // Undeclared exception!
      try { 
        alphaBetaPruning0.resetBoard((String[][]) null, stringArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.mooctest.AlphaBetaPruning", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      AlphaBetaPruning alphaBetaPruning0 = new AlphaBetaPruning();
      String[][] stringArrayArray0 = null;
      // Undeclared exception!
      try { 
        alphaBetaPruning0.calculateWhiteScore((String[][]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      AlphaBetaPruning alphaBetaPruning0 = new AlphaBetaPruning();
      String[][] stringArray0 = new String[1][7];
      String[] stringArray1 = new String[5];
      stringArray1[1] = "O";
      stringArray0[0] = stringArray1;
      // Undeclared exception!
      try { 
        alphaBetaPruning0.calculateWhiteScore(stringArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      AlphaBetaPruning alphaBetaPruning0 = new AlphaBetaPruning();
      String[][] stringArray0 = new String[8][8];
      MyTreeNode<String> myTreeNode0 = new MyTreeNode<String>("t");
      alphaBetaPruning0.createAlphaBetaTree(stringArray0, stringArray0, stringArray0, myTreeNode0);
      String[] stringArray1 = new String[9];
      stringArray1[1] = "[6`Bz";
      stringArray0[0] = stringArray1;
      MyTreeNode<Object> myTreeNode1 = new MyTreeNode<Object>(myTreeNode0);
      myTreeNode1.addChild((Object) "");
      myTreeNode0.setData("[6`Bz");
      myTreeNode0.addChild(myTreeNode1);
      alphaBetaPruning0.calculateWhiteScore(stringArray0);
      // Undeclared exception!
      try { 
        alphaBetaPruning0.createAlphaBetaTree(stringArray0, stringArray0, stringArray0, myTreeNode0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      AlphaBetaPruning alphaBetaPruning0 = new AlphaBetaPruning();
      String[][] stringArray0 = new String[8][8];
      MyTreeNode<String> myTreeNode0 = new MyTreeNode<String>("t");
      alphaBetaPruning0.createAlphaBetaTree(stringArray0, stringArray0, stringArray0, myTreeNode0);
      String[] stringArray1 = new String[9];
      stringArray1[0] = "?*VDvxb< ,ChunA3";
      stringArray1[1] = "[6`Bz";
      stringArray0[0] = stringArray1;
      MyTreeNode<String> myTreeNode1 = new MyTreeNode<String>(454, 454);
      MyTreeNode<Object> myTreeNode2 = new MyTreeNode<Object>(454);
      myTreeNode1.addChild(myTreeNode2);
      String string0 = alphaBetaPruning0.createAlphaBetaTree(stringArray0, stringArray0, stringArray0, myTreeNode1);
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      AlphaBetaPruning alphaBetaPruning0 = new AlphaBetaPruning();
      String[][] stringArray0 = new String[8][8];
      MyTreeNode<String> myTreeNode0 = new MyTreeNode<String>("t");
      alphaBetaPruning0.createAlphaBetaTree(stringArray0, stringArray0, stringArray0, myTreeNode0);
      String[] stringArray1 = new String[9];
      stringArray1[0] = "?*VDvxb< ,ChunA3";
      stringArray1[1] = "[6`Bz";
      stringArray0[0] = stringArray1;
      MyTreeNode<String> myTreeNode1 = new MyTreeNode<String>("[6`Bz");
      MyTreeNode<Object> myTreeNode2 = new MyTreeNode<Object>(myTreeNode1);
      myTreeNode2.setData("[6`Bz");
      myTreeNode0.setData("[6`Bz");
      myTreeNode1.addChild(myTreeNode2);
      myTreeNode0.setBeta(454);
      alphaBetaPruning0.createAlphaBetaTree(stringArray0, stringArray0, stringArray0, myTreeNode1);
      alphaBetaPruning0.createAlphaBetaTree(stringArray0, stringArray0, stringArray0, myTreeNode1);
      String string0 = alphaBetaPruning0.createAlphaBetaTree(stringArray0, stringArray0, stringArray0, myTreeNode0);
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      String[][] stringArray0 = new String[10][8];
      AlphaBetaPruning alphaBetaPruning0 = new AlphaBetaPruning();
      alphaBetaPruning0.resetBoard(stringArray0, stringArray0);
      String[][] stringArray1 = new String[6][6];
      String[] stringArray2 = new String[5];
      stringArray2[0] = "<,CZuvK9?";
      stringArray2[1] = "  01234567";
      stringArray2[2] = "*";
      stringArray2[3] = "Knm9aOlnsO4XaBp";
      stringArray2[4] = "?PBO=T%";
      stringArray1[0] = stringArray2;
      String[] stringArray3 = new String[7];
      stringArray3[0] = "<,CZuvK9?";
      stringArray3[1] = "?PBO=T%";
      stringArray3[2] = "Knm9aOlnsO4XaBp";
      stringArray3[3] = "Knm9aOlnsO4XaBp";
      stringArray3[4] = "<,CZuvK9?";
      stringArray3[5] = "?PBO=T%";
      stringArray3[6] = "  01234567";
      stringArray1[1] = stringArray3;
      String[] stringArray4 = new String[6];
      stringArray4[0] = "  01234567";
      stringArray4[1] = "?PBO=T%";
      stringArray4[2] = "*";
      stringArray4[3] = "  01234567";
      stringArray4[4] = "?PBO=T%";
      stringArray4[5] = "?PBO=T%";
      stringArray1[2] = stringArray4;
      String[] stringArray5 = new String[3];
      stringArray5[0] = "?PBO=T%";
      stringArray5[1] = "<,CZuvK9?";
      stringArray5[2] = "*";
      stringArray1[3] = stringArray5;
      String[] stringArray6 = new String[9];
      stringArray6[0] = "<,CZuvK9?";
      stringArray6[1] = "*";
      stringArray6[2] = "Knm9aOlnsO4XaBp";
      stringArray6[3] = "  01234567";
      stringArray6[4] = "  01234567";
      stringArray6[5] = "Knm9aOlnsO4XaBp";
      stringArray6[6] = "*";
      stringArray6[7] = "?PBO=T%";
      stringArray6[8] = "Knm9aOlnsO4XaBp";
      stringArray1[4] = stringArray6;
      String[] stringArray7 = new String[8];
      stringArray7[0] = "Knm9aOlnsO4XaBp";
      stringArray7[1] = "Knm9aOlnsO4XaBp";
      stringArray7[2] = "<,CZuvK9?";
      stringArray7[3] = "*";
      stringArray7[4] = "?PBO=T%";
      stringArray7[5] = "Knm9aOlnsO4XaBp";
      stringArray7[6] = "Knm9aOlnsO4XaBp";
      stringArray7[7] = "<,CZuvK9?";
      stringArray1[5] = stringArray7;
      MyTreeNode<String> myTreeNode0 = new MyTreeNode<String>((-1970), (-2880));
      // Undeclared exception!
      try { 
        alphaBetaPruning0.createAlphaBetaTree(stringArray0, stringArray1, stringArray1, myTreeNode0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      AlphaBetaPruning alphaBetaPruning0 = new AlphaBetaPruning();
      String[][] stringArray0 = new String[0][3];
      String[][] stringArray1 = new String[1][0];
      String[] stringArray2 = new String[8];
      stringArray2[0] = "";
      stringArray2[1] = "mNy&<Ve<R{WRnzNwQ";
      stringArray2[2] = "8pF3_y6]XyBU]hh_";
      stringArray2[3] = "1*H^O-=j-";
      stringArray2[4] = "Q*8u5@9+B}";
      stringArray2[5] = "";
      stringArray2[6] = "";
      stringArray2[7] = "*";
      stringArray1[0] = stringArray2;
      String[][] stringArray3 = new String[8][8];
      stringArray3[0] = stringArray2;
      stringArray3[1] = stringArray2;
      stringArray3[2] = stringArray2;
      stringArray3[3] = stringArray2;
      stringArray3[5] = stringArray2;
      stringArray3[6] = stringArray2;
      stringArray3[7] = stringArray2;
      MyTreeNode<String> myTreeNode0 = new MyTreeNode<String>(1);
      // Undeclared exception!
      try { 
        alphaBetaPruning0.createAlphaBetaTree(stringArray0, stringArray1, stringArray3, myTreeNode0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      AlphaBetaPruning alphaBetaPruning0 = new AlphaBetaPruning();
      String[][] stringArray0 = new String[1][0];
      String[] stringArray1 = new String[10];
      stringArray1[5] = "X";
      MyTreeNode<String> myTreeNode0 = new MyTreeNode<String>((-509));
      String[][] stringArray2 = new String[9][2];
      stringArray2[0] = stringArray1;
      stringArray2[1] = stringArray1;
      stringArray2[2] = stringArray1;
      stringArray2[3] = stringArray1;
      stringArray2[4] = stringArray1;
      stringArray2[5] = stringArray1;
      stringArray2[6] = stringArray1;
      stringArray2[7] = stringArray1;
      String[] stringArray3 = new String[4];
      stringArray3[0] = "X";
      stringArray3[1] = "X";
      stringArray3[2] = "X";
      stringArray3[3] = "X";
      stringArray2[8] = stringArray3;
      alphaBetaPruning0.calculateWhiteScore(stringArray2);
      // Undeclared exception!
      try { 
        alphaBetaPruning0.createAlphaBetaTree(stringArray0, stringArray0, stringArray0, myTreeNode0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      AlphaBetaPruning alphaBetaPruning0 = new AlphaBetaPruning();
      String[][] stringArray0 = new String[24][0];
      String[] stringArray1 = new String[7];
      stringArray1[5] = "X";
      stringArray0[0] = stringArray1;
      // Undeclared exception!
      try { 
        alphaBetaPruning0.calculateWhiteScore(stringArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      AlphaBetaPruning alphaBetaPruning0 = new AlphaBetaPruning();
      String[][] stringArray0 = new String[10][8];
      MyTreeNode<String> myTreeNode0 = new MyTreeNode<String>("");
      alphaBetaPruning0.createAlphaBetaTree(stringArray0, stringArray0, stringArray0, myTreeNode0);
      MyTreeNode<Object> myTreeNode1 = new MyTreeNode<Object>((-6), (-6));
      myTreeNode0.addChild(myTreeNode1);
      myTreeNode0.addChild("");
      myTreeNode1.addChild(myTreeNode0);
      alphaBetaPruning0.createAlphaBetaTree(stringArray0, stringArray0, stringArray0, myTreeNode0);
      alphaBetaPruning0.createAlphaBetaTree(stringArray0, stringArray0, stringArray0, myTreeNode0);
      alphaBetaPruning0.calculateWhiteScore(stringArray0);
      String[][] stringArray1 = new String[5][2];
      String[] stringArray2 = new String[8];
      stringArray2[0] = "";
      stringArray2[1] = "";
      stringArray2[2] = "";
      stringArray2[3] = "";
      stringArray2[4] = "";
      stringArray2[5] = "";
      stringArray2[6] = "";
      stringArray2[7] = "gi|,^Bs&/";
      stringArray1[0] = stringArray2;
      String[] stringArray3 = new String[9];
      stringArray3[0] = "";
      stringArray3[1] = "";
      stringArray3[2] = "*";
      stringArray3[3] = "";
      stringArray3[4] = "";
      stringArray3[5] = "gi|,^Bs&/";
      stringArray3[6] = "";
      stringArray3[7] = "";
      stringArray3[8] = "";
      stringArray1[1] = stringArray3;
      String[] stringArray4 = new String[5];
      stringArray4[0] = "";
      stringArray4[1] = "";
      stringArray4[2] = "";
      stringArray4[3] = "";
      stringArray4[4] = "";
      stringArray1[2] = stringArray4;
      String[] stringArray5 = new String[7];
      stringArray5[0] = "";
      stringArray5[1] = "";
      stringArray5[2] = "";
      stringArray5[3] = "*";
      stringArray5[4] = "";
      stringArray5[5] = "";
      stringArray5[6] = "gi|,^Bs&/";
      stringArray1[3] = stringArray5;
      String[] stringArray6 = new String[6];
      stringArray6[0] = "";
      stringArray6[1] = "";
      stringArray6[2] = "gi|,^Bs&/";
      stringArray6[3] = "";
      stringArray6[4] = "";
      stringArray6[5] = "";
      stringArray1[4] = stringArray6;
      // Undeclared exception!
      try { 
        alphaBetaPruning0.createAlphaBetaTree(stringArray0, stringArray1, stringArray0, myTreeNode0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      AlphaBetaPruning alphaBetaPruning0 = new AlphaBetaPruning();
      String[][] stringArray0 = new String[11][8];
      MyTreeNode<String> myTreeNode0 = new MyTreeNode<String>("");
      alphaBetaPruning0.createAlphaBetaTree(stringArray0, stringArray0, stringArray0, myTreeNode0);
      MyTreeNode<Object> myTreeNode1 = new MyTreeNode<Object>((-2393));
      myTreeNode0.addChild(myTreeNode1);
      myTreeNode0.addChild("");
      myTreeNode1.addChild(myTreeNode0);
      alphaBetaPruning0.createAlphaBetaTree(stringArray0, stringArray0, stringArray0, myTreeNode0);
      alphaBetaPruning0.createAlphaBetaTree(stringArray0, stringArray0, stringArray0, myTreeNode0);
      int int0 = alphaBetaPruning0.calculateWhiteScore(stringArray0);
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      AlphaBetaPruning alphaBetaPruning0 = new AlphaBetaPruning();
      String[][] stringArray0 = new String[10][8];
      MyTreeNode<String> myTreeNode0 = new MyTreeNode<String>("");
      alphaBetaPruning0.createAlphaBetaTree(stringArray0, stringArray0, stringArray0, myTreeNode0);
      MyTreeNode<String> myTreeNode1 = new MyTreeNode<String>(454, 454);
      MyTreeNode<Object> myTreeNode2 = new MyTreeNode<Object>(myTreeNode1);
      myTreeNode1.addChild(myTreeNode0);
      myTreeNode1.addChild(myTreeNode2);
      String string0 = alphaBetaPruning0.createAlphaBetaTree(stringArray0, stringArray0, stringArray0, myTreeNode1);
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      String[][] stringArray0 = new String[8][8];
      AlphaBetaPruning alphaBetaPruning0 = new AlphaBetaPruning();
      String[][] stringArray1 = new String[22][6];
      String[] stringArray2 = new String[4];
      stringArray2[1] = "*";
      stringArray1[0] = stringArray2;
      MyTreeNode<String> myTreeNode0 = new MyTreeNode<String>("*");
      // Undeclared exception!
      try { 
        alphaBetaPruning0.createAlphaBetaTree(stringArray0, stringArray1, stringArray0, myTreeNode0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      AlphaBetaPruning alphaBetaPruning0 = new AlphaBetaPruning();
      String[][] stringArray0 = new String[0][3];
      MyTreeNode<String> myTreeNode0 = new MyTreeNode<String>(2415, 2415);
      // Undeclared exception!
      try { 
        alphaBetaPruning0.createAlphaBetaTree(stringArray0, stringArray0, stringArray0, myTreeNode0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      String[][] stringArray0 = new String[6][7];
      String[] stringArray1 = new String[18];
      stringArray1[2] = "O";
      stringArray0[0] = stringArray1;
      AlphaBetaPruning alphaBetaPruning0 = new AlphaBetaPruning();
      // Undeclared exception!
      try { 
        alphaBetaPruning0.calculateWhiteScore(stringArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      AlphaBetaPruning alphaBetaPruning0 = new AlphaBetaPruning();
      String[][] stringArray0 = new String[10][8];
      MyTreeNode<String> myTreeNode0 = new MyTreeNode<String>("^8A.wJr");
      alphaBetaPruning0.createAlphaBetaTree(stringArray0, stringArray0, stringArray0, myTreeNode0);
      MyTreeNode<Object> myTreeNode1 = new MyTreeNode<Object>((-2411), (-2411));
      myTreeNode0.addChild(myTreeNode1);
      myTreeNode0.addChild("");
      myTreeNode1.addChild(myTreeNode0);
      assertEquals((-10000), myTreeNode0.getValue());
      
      alphaBetaPruning0.createAlphaBetaTree(stringArray0, stringArray0, stringArray0, myTreeNode0);
      alphaBetaPruning0.createAlphaBetaTree(stringArray0, stringArray0, stringArray0, myTreeNode0);
      int int0 = alphaBetaPruning0.calculateWhiteScore(stringArray0);
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      AlphaBetaPruning alphaBetaPruning0 = new AlphaBetaPruning();
      String[][] stringArray0 = new String[2][0];
      String[] stringArray1 = new String[6];
      stringArray1[1] = "X";
      stringArray0[0] = stringArray1;
      // Undeclared exception!
      try { 
        alphaBetaPruning0.calculateWhiteScore(stringArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      String[][] stringArray0 = new String[16][8];
      AlphaBetaPruning alphaBetaPruning0 = new AlphaBetaPruning();
      String[][] stringArray1 = new String[39][6];
      String[] stringArray2 = new String[6];
      stringArray2[0] = "*";
      stringArray1[0] = stringArray2;
      MyTreeNode<String> myTreeNode0 = new MyTreeNode<String>("*");
      // Undeclared exception!
      try { 
        alphaBetaPruning0.createAlphaBetaTree(stringArray0, stringArray1, stringArray0, myTreeNode0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }
}
